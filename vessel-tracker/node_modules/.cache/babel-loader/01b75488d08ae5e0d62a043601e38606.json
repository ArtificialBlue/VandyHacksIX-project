{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.arePathsEqual = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  /**\n   * Compares two path arrays of LatLng objects.\n   */\n\n  var arePathsEqual = exports.arePathsEqual = function arePathsEqual(pathA, pathB) {\n    if (pathA === pathB) {\n      return true;\n    }\n    if (!Array.isArray(pathA) || !Array.isArray(pathB)) {\n      return false;\n    }\n    if (pathA.length !== pathB.length) {\n      return false;\n    }\n    for (var i = 0; i < pathA.length; ++i) {\n      if (pathA[i] === pathB[i]) {\n        continue;\n      }\n      if (!isValidLatLng(pathA[i]) || !isValidLatLng(pathB[i])) {\n        return false;\n      }\n      if (pathB[i].lat !== pathA[i].lat || pathB[i].lng !== pathA[i].lng) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Helper that checks whether an array consists of objects\n   * with lat and lng properties\n   * @param {object} elem the element to check\n   * @returns {boolean} whether or not it's valid\n   */\n  var isValidLatLng = function isValidLatLng(elem) {\n    return elem !== null && (typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) === 'object' && elem.hasOwnProperty('lat') && elem.hasOwnProperty('lng');\n  };\n});","map":{"version":3,"names":["global","factory","define","amd","exports","mod","arePathsEqual","Object","defineProperty","value","_typeof","Symbol","iterator","obj","constructor","prototype","pathA","pathB","Array","isArray","length","i","isValidLatLng","lat","lng","elem","hasOwnProperty"],"sources":["C:/Users/georg/Documents/GitHub/VandyHacksIX-project/vessel-tracker/node_modules/google-maps-react/dist/lib/arePathsEqual.js"],"sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.arePathsEqual = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  /**\n   * Compares two path arrays of LatLng objects.\n   */\n\n  var arePathsEqual = exports.arePathsEqual = function arePathsEqual(pathA, pathB) {\n    if (pathA === pathB) {\n      return true;\n    }\n    if (!Array.isArray(pathA) || !Array.isArray(pathB)) {\n      return false;\n    }\n    if (pathA.length !== pathB.length) {\n      return false;\n    }\n    for (var i = 0; i < pathA.length; ++i) {\n      if (pathA[i] === pathB[i]) {\n        continue;\n      }\n      if (!isValidLatLng(pathA[i]) || !isValidLatLng(pathB[i])) {\n        return false;\n      }\n      if (pathB[i].lat !== pathA[i].lat || pathB[i].lng !== pathA[i].lng) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Helper that checks whether an array consists of objects\n   * with lat and lng properties\n   * @param {object} elem the element to check\n   * @returns {boolean} whether or not it's valid\n   */\n  var isValidLatLng = function isValidLatLng(elem) {\n    return elem !== null && (typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) === 'object' && elem.hasOwnProperty('lat') && elem.hasOwnProperty('lng');\n  };\n});"],"mappings":"AAAA,CAAC,UAAUA,MAAM,EAAEC,OAAO,EAAE;EAC1B,IAAI,OAAOC,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAG,EAAE;IAC9CD,MAAM,CAAC,CAAC,SAAS,CAAC,EAAED,OAAO,CAAC;EAC9B,CAAC,MAAM,IAAI,OAAOG,OAAO,KAAK,WAAW,EAAE;IACzCH,OAAO,CAACG,OAAO,CAAC;EAClB,CAAC,MAAM;IACL,IAAIC,GAAG,GAAG;MACRD,OAAO,EAAE,CAAC;IACZ,CAAC;IACDH,OAAO,CAACI,GAAG,CAACD,OAAO,CAAC;IACpBJ,MAAM,CAACM,aAAa,GAAGD,GAAG,CAACD,OAAO;EACpC;AACF,CAAC,EAAE,IAAI,EAAE,UAAUA,OAAO,EAAE;EAC1B,YAAY;;EAEZG,MAAM,CAACC,cAAc,CAACJ,OAAO,EAAE,YAAY,EAAE;IAC3CK,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,IAAIC,OAAO,GAAG,OAAOC,MAAM,KAAK,UAAU,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,QAAQ,GAAG,UAAUC,GAAG,EAAE;IACjG,OAAO,OAAOA,GAAG;EACnB,CAAC,GAAG,UAAUA,GAAG,EAAE;IACjB,OAAOA,GAAG,IAAI,OAAOF,MAAM,KAAK,UAAU,IAAIE,GAAG,CAACC,WAAW,KAAKH,MAAM,IAAIE,GAAG,KAAKF,MAAM,CAACI,SAAS,GAAG,QAAQ,GAAG,OAAOF,GAAG;EAC9H,CAAC;;EAED;AACF;AACA;;EAEE,IAAIP,aAAa,GAAGF,OAAO,CAACE,aAAa,GAAG,SAASA,aAAa,CAACU,KAAK,EAAEC,KAAK,EAAE;IAC/E,IAAID,KAAK,KAAKC,KAAK,EAAE;MACnB,OAAO,IAAI;IACb;IACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,IAAI,CAACE,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MAClD,OAAO,KAAK;IACd;IACA,IAAID,KAAK,CAACI,MAAM,KAAKH,KAAK,CAACG,MAAM,EAAE;MACjC,OAAO,KAAK;IACd;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACI,MAAM,EAAE,EAAEC,CAAC,EAAE;MACrC,IAAIL,KAAK,CAACK,CAAC,CAAC,KAAKJ,KAAK,CAACI,CAAC,CAAC,EAAE;QACzB;MACF;MACA,IAAI,CAACC,aAAa,CAACN,KAAK,CAACK,CAAC,CAAC,CAAC,IAAI,CAACC,aAAa,CAACL,KAAK,CAACI,CAAC,CAAC,CAAC,EAAE;QACxD,OAAO,KAAK;MACd;MACA,IAAIJ,KAAK,CAACI,CAAC,CAAC,CAACE,GAAG,KAAKP,KAAK,CAACK,CAAC,CAAC,CAACE,GAAG,IAAIN,KAAK,CAACI,CAAC,CAAC,CAACG,GAAG,KAAKR,KAAK,CAACK,CAAC,CAAC,CAACG,GAAG,EAAE;QAClE,OAAO,KAAK;MACd;IACF;IACA,OAAO,IAAI;EACb,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;EACE,IAAIF,aAAa,GAAG,SAASA,aAAa,CAACG,IAAI,EAAE;IAC/C,OAAOA,IAAI,KAAK,IAAI,IAAI,CAAC,OAAOA,IAAI,KAAK,WAAW,GAAG,WAAW,GAAGf,OAAO,CAACe,IAAI,CAAC,MAAM,QAAQ,IAAIA,IAAI,CAACC,cAAc,CAAC,KAAK,CAAC,IAAID,IAAI,CAACC,cAAc,CAAC,KAAK,CAAC;EAC9J,CAAC;AACH,CAAC,CAAC"},"metadata":{},"sourceType":"script"}