{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', './windowOrGlobal'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('./windowOrGlobal'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.windowOrGlobal);\n    global.ScriptCache = mod.exports;\n  }\n})(this, function (exports, window) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var counter = 0;\n  var scriptMap = typeof window !== 'undefined' && window._scriptMap || new Map();\n  var ScriptCache = exports.ScriptCache = function (global) {\n    global._scriptMap = global._scriptMap || scriptMap;\n    return function ScriptCache(scripts) {\n      var Cache = {};\n      Cache._onLoad = function (key) {\n        return function (cb) {\n          var registered = true;\n          function unregister() {\n            registered = false;\n          }\n          var stored = scriptMap.get(key);\n          if (stored) {\n            stored.promise.then(function () {\n              if (registered) {\n                stored.error ? cb(stored.error) : cb(null, stored);\n              }\n              return stored;\n            }).catch(function (error) {\n              return cb(error);\n            });\n          } else {\n            // TODO:\n          }\n          return unregister;\n        };\n      };\n      Cache._scriptTag = function (key, src) {\n        if (!scriptMap.has(key)) {\n          // Server side rendering environments don't always have access to the `document` global.\n          // In these cases, we're not going to be able to return a script tag, so just return null.\n          if (typeof document === 'undefined') return null;\n          var tag = document.createElement('script');\n          var promise = new Promise(function (resolve, reject) {\n            var body = document.getElementsByTagName('body')[0];\n            tag.type = 'text/javascript';\n            tag.async = false; // Load in order\n\n            var cbName = 'loaderCB' + counter++ + Date.now();\n            var cb = void 0;\n            var handleResult = function handleResult(state) {\n              return function (evt) {\n                var stored = scriptMap.get(key);\n                if (state === 'loaded') {\n                  stored.resolved = true;\n                  resolve(src);\n                  // stored.handlers.forEach(h => h.call(null, stored))\n                  // stored.handlers = []\n                } else if (state === 'error') {\n                  stored.errored = true;\n                  // stored.handlers.forEach(h => h.call(null, stored))\n                  // stored.handlers = [];\n                  reject(evt);\n                }\n                stored.loaded = true;\n                cleanup();\n              };\n            };\n            var cleanup = function cleanup() {\n              if (global[cbName] && typeof global[cbName] === 'function') {\n                global[cbName] = null;\n                delete global[cbName];\n              }\n            };\n            tag.onload = handleResult('loaded');\n            tag.onerror = handleResult('error');\n            tag.onreadystatechange = function () {\n              handleResult(tag.readyState);\n            };\n\n            // Pick off callback, if there is one\n            if (src.match(/callback=CALLBACK_NAME/)) {\n              src = src.replace(/(callback=)[^\\&]+/, '$1' + cbName);\n              cb = window[cbName] = tag.onload;\n            } else {\n              tag.addEventListener('load', tag.onload);\n            }\n            tag.addEventListener('error', tag.onerror);\n            tag.src = src;\n            body.appendChild(tag);\n            return tag;\n          });\n          var initialState = {\n            loaded: false,\n            error: false,\n            promise: promise,\n            tag: tag\n          };\n          scriptMap.set(key, initialState);\n        }\n        return scriptMap.get(key).tag;\n      };\n\n      // let scriptTags = document.querySelectorAll('script')\n      //\n      // NodeList.prototype.filter = Array.prototype.filter;\n      // NodeList.prototype.map = Array.prototype.map;\n      // const initialScripts = scriptTags\n      //   .filter(s => !!s.src)\n      //   .map(s => s.src.split('?')[0])\n      //   .reduce((memo, script) => {\n      //     memo[script] = script;\n      //     return memo;\n      //   }, {});\n\n      Object.keys(scripts).forEach(function (key) {\n        var script = scripts[key];\n        var tag = window._scriptMap.has(key) ? window._scriptMap.get(key).tag : Cache._scriptTag(key, script);\n        Cache[key] = {\n          tag: tag,\n          onLoad: Cache._onLoad(key)\n        };\n      });\n      return Cache;\n    };\n  }(window);\n  exports.default = ScriptCache;\n});","map":{"version":3,"names":["global","factory","define","amd","exports","require","mod","windowOrGlobal","ScriptCache","window","Object","defineProperty","value","counter","scriptMap","_scriptMap","Map","scripts","Cache","_onLoad","key","cb","registered","unregister","stored","get","promise","then","error","catch","_scriptTag","src","has","document","tag","createElement","Promise","resolve","reject","body","getElementsByTagName","type","async","cbName","Date","now","handleResult","state","evt","resolved","errored","loaded","cleanup","onload","onerror","onreadystatechange","readyState","match","replace","addEventListener","appendChild","initialState","set","keys","forEach","script","onLoad","default"],"sources":["C:/Users/georg/Documents/GitHub/VandyHacksIX-project/vessel-tracker/node_modules/google-maps-react/dist/lib/ScriptCache.js"],"sourcesContent":["(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', './windowOrGlobal'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('./windowOrGlobal'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.windowOrGlobal);\n        global.ScriptCache = mod.exports;\n    }\n})(this, function (exports, window) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    var counter = 0;\n    var scriptMap = typeof window !== 'undefined' && window._scriptMap || new Map();\n    var ScriptCache = exports.ScriptCache = function (global) {\n        global._scriptMap = global._scriptMap || scriptMap;\n        return function ScriptCache(scripts) {\n            var Cache = {};\n\n            Cache._onLoad = function (key) {\n                return function (cb) {\n                    var registered = true;\n\n                    function unregister() {\n                        registered = false;\n                    }\n\n                    var stored = scriptMap.get(key);\n\n                    if (stored) {\n                        stored.promise.then(function () {\n                            if (registered) {\n                                stored.error ? cb(stored.error) : cb(null, stored);\n                            }\n\n                            return stored;\n                        }).catch(function (error) {\n                            return cb(error);\n                        });\n                    } else {\n                        // TODO:\n                    }\n\n                    return unregister;\n                };\n            };\n\n            Cache._scriptTag = function (key, src) {\n                if (!scriptMap.has(key)) {\n                    // Server side rendering environments don't always have access to the `document` global.\n                    // In these cases, we're not going to be able to return a script tag, so just return null.\n                    if (typeof document === 'undefined') return null;\n\n                    var tag = document.createElement('script');\n                    var promise = new Promise(function (resolve, reject) {\n                        var body = document.getElementsByTagName('body')[0];\n\n                        tag.type = 'text/javascript';\n                        tag.async = false; // Load in order\n\n                        var cbName = 'loaderCB' + counter++ + Date.now();\n                        var cb = void 0;\n\n                        var handleResult = function handleResult(state) {\n                            return function (evt) {\n                                var stored = scriptMap.get(key);\n                                if (state === 'loaded') {\n                                    stored.resolved = true;\n                                    resolve(src);\n                                    // stored.handlers.forEach(h => h.call(null, stored))\n                                    // stored.handlers = []\n                                } else if (state === 'error') {\n                                    stored.errored = true;\n                                    // stored.handlers.forEach(h => h.call(null, stored))\n                                    // stored.handlers = [];\n                                    reject(evt);\n                                }\n                                stored.loaded = true;\n\n                                cleanup();\n                            };\n                        };\n\n                        var cleanup = function cleanup() {\n                            if (global[cbName] && typeof global[cbName] === 'function') {\n                                global[cbName] = null;\n                                delete global[cbName];\n                            }\n                        };\n\n                        tag.onload = handleResult('loaded');\n                        tag.onerror = handleResult('error');\n                        tag.onreadystatechange = function () {\n                            handleResult(tag.readyState);\n                        };\n\n                        // Pick off callback, if there is one\n                        if (src.match(/callback=CALLBACK_NAME/)) {\n                            src = src.replace(/(callback=)[^\\&]+/, '$1' + cbName);\n                            cb = window[cbName] = tag.onload;\n                        } else {\n                            tag.addEventListener('load', tag.onload);\n                        }\n                        tag.addEventListener('error', tag.onerror);\n\n                        tag.src = src;\n                        body.appendChild(tag);\n\n                        return tag;\n                    });\n                    var initialState = {\n                        loaded: false,\n                        error: false,\n                        promise: promise,\n                        tag: tag\n                    };\n                    scriptMap.set(key, initialState);\n                }\n                return scriptMap.get(key).tag;\n            };\n\n            // let scriptTags = document.querySelectorAll('script')\n            //\n            // NodeList.prototype.filter = Array.prototype.filter;\n            // NodeList.prototype.map = Array.prototype.map;\n            // const initialScripts = scriptTags\n            //   .filter(s => !!s.src)\n            //   .map(s => s.src.split('?')[0])\n            //   .reduce((memo, script) => {\n            //     memo[script] = script;\n            //     return memo;\n            //   }, {});\n\n            Object.keys(scripts).forEach(function (key) {\n                var script = scripts[key];\n\n                var tag = window._scriptMap.has(key) ? window._scriptMap.get(key).tag : Cache._scriptTag(key, script);\n\n                Cache[key] = {\n                    tag: tag,\n                    onLoad: Cache._onLoad(key)\n                };\n            });\n\n            return Cache;\n        };\n    }(window);\n\n    exports.default = ScriptCache;\n});"],"mappings":"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"},"metadata":{},"sourceType":"script"}